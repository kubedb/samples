apiVersion: kubedb.com/v1alpha2
kind: RabbitMQ
metadata:
  name: rabbitmq-prod
  namespace: rabbit
spec:
  version: "3.12.12"
  replicas: 3
  # authSecret:
  #   name: rabbit-user  # reference to a secret containing user (admin) credentials
  storage:
    storageClassName: longhorn
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  storageType: Durable
  deletionPolicy: WipeOut  # DoNotTerminate(blocks deletion), Halt( retains pvc,secret), Delete (retains secret)
  podTemplate:
    spec:
      nodeSelector:
        app: kubedb
        instance: rabbitmq
        component: rabbitmq-database
      tolerations:
        - effect: NoSchedule
          key: app
          operator: Equal
          value: kubedb
        - effect: NoSchedule
          key: instance
          operator: Equal
          value: rabbitmq
        - effect: NoSchedule
          key: component
          operator: Equal
          value: rabbitmq-database
        - effect: NoSchedule
          key: nodepool_type
          operator: Equal
          value: n2-standard-2
      containers:
        - name: rabbitmq
          resources:
            requests:
              cpu: "800m"
              memory: "1.5Gi"
            limits:
              cpu: "2"
              memory: "2Gi"
  serviceTemplates:
    - alias: primary
      spec:
        type: LoadBalancer
  monitor:
    agent: prometheus.io/builtin  # Or, using helm-prometheus-stack: prometheus.io/operator
#    prometheus:
#     serviceMonitor:
#       labels:
#         release: prometheus